vertical_table_parser: &VERTICAL_TABLE_PARSER network_insight_sdk_generic_datasources.parsers.common.vertical_table_parser.VerticalTableParser
horizontal_table_parser: &HORIZONTAL_TABLE_PARSER network_insight_sdk_generic_datasources.parsers.common.horizontal_table_parser.HorizontalTableParser
generic_text_parser: &GENERIC_TEXT_PARSER network_insight_sdk_generic_datasources.parsers.common.text_parser.GenericTextParser
generation_directory: &GENERATION_DIRECTORY /tmp/uani

package_handler: &PACKAGE_HANDLER
  name: ZipPackageHandler

# workloads added will be executed in sequence
workloads: &WORKLOADS
  - &SHOW_VERSION
    table_id: switch
    command: show version
    parser:
      pre_post_processor: UBNTVersionPrePostProcessor
      name: *VERTICAL_TABLE_PARSER

  - &MAC_ADDRESS_TABLE
    table_id: mac-address-table
    command: show arp | no-match 'incomplete' | no-match 'Address' | no-more
    parser:
      pre_post_processor: UBNTMacPrePostProcessor
      name: *HORIZONTAL_TABLE_PARSER
      arguments:
        skip_head: 0
        header_keys:
          - IPAddress
          - HWType
          - HWaddress
          - Flags
          - Iface
    select_columns:
      HWaddress: macAddress
      Iface: switchPort
      vlan: vlan

  - &SHOW_LLDP_NEIGHBORS
    table_id: neighbors
    command: show lldp neighbors detail | no-more
    block_parser:
      name: GenericBlockParser
      arguments:
        start_pattern: '-------------------------------------------------------------------------------'
        end_pattern: 'PPVID'
    parser:
      pre_post_processor: UBNTLLDPPrePostProcessor
      name: *GENERIC_TEXT_PARSER
      arguments:
        rules:
          remoteDevice: "SysName: (.*)"
          localInterface: "Interface: (.*), via: LLDP, RID: \\d+, Time: .*$"
          remoteInterface: "PortID: (.*)"


  - &SHOW_IP_ROUTE_VRF_ALL
    table_id: routes
    command: show ip route | no-more
    block_parser:
      name: GenericBlockParser
      arguments:
        line_pattern: 'IP Route Table for VRF'
    parser:
      pre_post_processor: UBNTRoutePrePostProcessor
      name: *HORIZONTAL_TABLE_PARSER
      arguments:
        header_keys:
          - name
          - network
          - nextHop
          - interfaceName
          - routeType
          - vrf

  - &SHOW_INTERFACE
    table_id: switch-ports
    command: show interfaces detail | no-more
    block_parser:
      name: GenericBlockParser
      arguments:
        line_pattern: 'eth[0-9]\.*:.*'
    parser:
      pre_post_processor: UBNTSwitchPortPrePostProcessor
      name: *GENERIC_TEXT_PARSER
      arguments:
        rules:
          name: "^((eth\\d+)|(eth\\d+\\.\\d+)@eth\\d+)\\:"
          connected: ".* state (UP|DOWN).*"
          accessVlan: "eth\\d+\\.(\\d+)"
          administrativeStatus: ".* state (UP|DOWN).*"
          operationalStatus: ".* state (UP|DOWN).*"
          hardwareAddress: ".*link\/ether (\\w{1,2}\\:\\w{1,2}\\:\\w{1,2}\\:\\w{1,2}\\:\\w{1,2}\\:\\w{1,2}).*"
          interfaceSpeed: ".* BW (\\w+) Kbit.*"
          operationalSpeed: ".* BW (\\w+) Kbit.*"
          mtu: ".*mtu (\\d{4}).*"
          ipAddress: "^inet (\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}/\\d{1,3}) brd.*"

  - &SHOW_PORT_CHANNELS
    table_id: port-channels
    command: show interfaces bonding detail | no-more
    parser:
      name: *GENERIC_TEXT_PARSER
      arguments:
        rules:
          name: "^((eth\\d+)|(eth\\d+\\.\\d+)@eth\\d+)\\:"
          connected: ".* state (UP|DOWN).*"
          accessVlan: "eth\\d+\\.(\\d+)"
          administrativeStatus: ".* state (UP|DOWN).*"
          operationalStatus: ".* state (UP|DOWN).*"
          hardwareAddress: ".*link/ether (.*) brd.*"
          interfaceSpeed: ".* BW (\\w+) Kbit.*"
          operationalSpeed: ".* BW (\\w+) Kbit.*"
          mtu: ".*mtu (\\d{4}).*"
          duplex: "(\\w+)\\-duplex.*"
          ipAddress: "^inet (\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}/\\d{1,3}) brd.*"
          activePorts: "Members in this channel: (.*)"

  - &SHOW_VRF_ALL
    table_id: vrfs
    command: show version
    parser:
      pre_post_processor: UBNTVrfPrePostProcessor
      name: *HORIZONTAL_TABLE_PARSER
      arguments:
        skip_head: 1
        header_keys:
          - name
    select_columns:
      name: name

  - &SHOW_ROUTER_INTERFACES
    table_id: router-interfaces
    reuse_command: show interfaces detail | no-more
    block_parser:
      name: GenericBlockParser
      arguments:
        line_pattern: 'eth[0-9]\.*:.*'
    parser:
      pre_post_processor: UBNTRouterInterfacePrePostProcessor
      name: *GENERIC_TEXT_PARSER
      arguments:
        rules:
          name: "^((eth\\d+)|(eth\\d+\\.\\d+)@eth\\d+)\\:"
          connected: ".* state (UP|DOWN).*"
          accessVlan: "eth\\d+\\.(\\d+)"
          administrativeStatus: ".* state (UP|DOWN).*"
          operationalStatus: ".* state (UP|DOWN).*"
          hardwareAddress: ".*link\/ether (\\w{1,2}\\:\\w{1,2}\\:\\w{1,2}\\:\\w{1,2}\\:\\w{1,2}\\:\\w{1,2}).*"
          mtu: ".*mtu (\\d{4}).*"
          ipAddress: ".*inet (\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,3}).*"



result_writer: &RESULT_WRITER
  name: CsvWriter
  table_id:
    - switch
    - mac-address-table
    - neighbors
    - routes
    - vrfs
    - router-interfaces
    - switch-ports
    - port-channels


edgerouter-lite: !include edgerouter-lite.yml

